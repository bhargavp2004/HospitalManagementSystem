//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMSClient.SessionManagerRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorDetails", Namespace="http://schemas.datacontract.org/2004/07/HMSService")]
    [System.SerializableAttribute()]
    public partial class DoctorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int deptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mobile_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int deptId {
            get {
                return this.deptIdField;
            }
            set {
                if ((this.deptIdField.Equals(value) != true)) {
                    this.deptIdField = value;
                    this.RaisePropertyChanged("deptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mobile_no {
            get {
                return this.mobile_noField;
            }
            set {
                if ((object.ReferenceEquals(this.mobile_noField, value) != true)) {
                    this.mobile_noField = value;
                    this.RaisePropertyChanged("mobile_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientRegistrationDetails", Namespace="http://schemas.datacontract.org/2004/07/HMSService.CompositeTypes")]
    [System.SerializableAttribute()]
    public partial class PatientRegistrationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDetails", Namespace="http://schemas.datacontract.org/2004/07/HMSService.CompositeTypes")]
    [System.SerializableAttribute()]
    public partial class LoginDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionManagerRef.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddDoctor", ReplyAction="http://tempuri.org/IAdminService/AddDoctorResponse")]
        string AddDoctor(HMSClient.SessionManagerRef.DoctorDetails d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddDoctor", ReplyAction="http://tempuri.org/IAdminService/AddDoctorResponse")]
        System.Threading.Tasks.Task<string> AddDoctorAsync(HMSClient.SessionManagerRef.DoctorDetails d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddDepartment", ReplyAction="http://tempuri.org/IAdminService/AddDepartmentResponse")]
        string AddDepartment(string deptName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/AddDepartment", ReplyAction="http://tempuri.org/IAdminService/AddDepartmentResponse")]
        System.Threading.Tasks.Task<string> AddDepartmentAsync(string deptName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : HMSClient.SessionManagerRef.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<HMSClient.SessionManagerRef.IAdminService>, HMSClient.SessionManagerRef.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddDoctor(HMSClient.SessionManagerRef.DoctorDetails d) {
            return base.Channel.AddDoctor(d);
        }
        
        public System.Threading.Tasks.Task<string> AddDoctorAsync(HMSClient.SessionManagerRef.DoctorDetails d) {
            return base.Channel.AddDoctorAsync(d);
        }
        
        public string AddDepartment(string deptName) {
            return base.Channel.AddDepartment(deptName);
        }
        
        public System.Threading.Tasks.Task<string> AddDepartmentAsync(string deptName) {
            return base.Channel.AddDepartmentAsync(deptName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionManagerRef.IDepartmentService")]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentsResponse")]
        string[] GetDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<string[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDeptId", ReplyAction="http://tempuri.org/IDepartmentService/GetDeptIdResponse")]
        int GetDeptId(string deptName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDeptId", ReplyAction="http://tempuri.org/IDepartmentService/GetDeptIdResponse")]
        System.Threading.Tasks.Task<int> GetDeptIdAsync(string deptName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : HMSClient.SessionManagerRef.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.ClientBase<HMSClient.SessionManagerRef.IDepartmentService>, HMSClient.SessionManagerRef.IDepartmentService {
        
        public DepartmentServiceClient() {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetDepartments() {
            return base.Channel.GetDepartments();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDepartmentsAsync() {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public int GetDeptId(string deptName) {
            return base.Channel.GetDeptId(deptName);
        }
        
        public System.Threading.Tasks.Task<int> GetDeptIdAsync(string deptName) {
            return base.Channel.GetDeptIdAsync(deptName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionManagerRef.IPatientService")]
    public interface IPatientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/RegisterPatient", ReplyAction="http://tempuri.org/IPatientService/RegisterPatientResponse")]
        string RegisterPatient(HMSClient.SessionManagerRef.PatientRegistrationDetails p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/RegisterPatient", ReplyAction="http://tempuri.org/IPatientService/RegisterPatientResponse")]
        System.Threading.Tasks.Task<string> RegisterPatientAsync(HMSClient.SessionManagerRef.PatientRegistrationDetails p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/PatientLogin", ReplyAction="http://tempuri.org/IPatientService/PatientLoginResponse")]
        string PatientLogin(HMSClient.SessionManagerRef.LoginDetails d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/PatientLogin", ReplyAction="http://tempuri.org/IPatientService/PatientLoginResponse")]
        System.Threading.Tasks.Task<string> PatientLoginAsync(HMSClient.SessionManagerRef.LoginDetails d);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientServiceChannel : HMSClient.SessionManagerRef.IPatientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientServiceClient : System.ServiceModel.ClientBase<HMSClient.SessionManagerRef.IPatientService>, HMSClient.SessionManagerRef.IPatientService {
        
        public PatientServiceClient() {
        }
        
        public PatientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterPatient(HMSClient.SessionManagerRef.PatientRegistrationDetails p) {
            return base.Channel.RegisterPatient(p);
        }
        
        public System.Threading.Tasks.Task<string> RegisterPatientAsync(HMSClient.SessionManagerRef.PatientRegistrationDetails p) {
            return base.Channel.RegisterPatientAsync(p);
        }
        
        public string PatientLogin(HMSClient.SessionManagerRef.LoginDetails d) {
            return base.Channel.PatientLogin(d);
        }
        
        public System.Threading.Tasks.Task<string> PatientLoginAsync(HMSClient.SessionManagerRef.LoginDetails d) {
            return base.Channel.PatientLoginAsync(d);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionManagerRef.ISessionManager")]
    public interface ISessionManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/GetIsLogin", ReplyAction="http://tempuri.org/ISessionManager/GetIsLoginResponse")]
        bool GetIsLogin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/GetIsLogin", ReplyAction="http://tempuri.org/ISessionManager/GetIsLoginResponse")]
        System.Threading.Tasks.Task<bool> GetIsLoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/SetIsLoginTrue", ReplyAction="http://tempuri.org/ISessionManager/SetIsLoginTrueResponse")]
        void SetIsLoginTrue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/SetIsLoginTrue", ReplyAction="http://tempuri.org/ISessionManager/SetIsLoginTrueResponse")]
        System.Threading.Tasks.Task SetIsLoginTrueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/SetIsLoginFalse", ReplyAction="http://tempuri.org/ISessionManager/SetIsLoginFalseResponse")]
        void SetIsLoginFalse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManager/SetIsLoginFalse", ReplyAction="http://tempuri.org/ISessionManager/SetIsLoginFalseResponse")]
        System.Threading.Tasks.Task SetIsLoginFalseAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionManagerChannel : HMSClient.SessionManagerRef.ISessionManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionManagerClient : System.ServiceModel.ClientBase<HMSClient.SessionManagerRef.ISessionManager>, HMSClient.SessionManagerRef.ISessionManager {
        
        public SessionManagerClient() {
        }
        
        public SessionManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetIsLogin() {
            return base.Channel.GetIsLogin();
        }
        
        public System.Threading.Tasks.Task<bool> GetIsLoginAsync() {
            return base.Channel.GetIsLoginAsync();
        }
        
        public void SetIsLoginTrue() {
            base.Channel.SetIsLoginTrue();
        }
        
        public System.Threading.Tasks.Task SetIsLoginTrueAsync() {
            return base.Channel.SetIsLoginTrueAsync();
        }
        
        public void SetIsLoginFalse() {
            base.Channel.SetIsLoginFalse();
        }
        
        public System.Threading.Tasks.Task SetIsLoginFalseAsync() {
            return base.Channel.SetIsLoginFalseAsync();
        }
    }
}
